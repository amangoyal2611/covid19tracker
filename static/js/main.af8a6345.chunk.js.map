{"version":3,"sources":["components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css","assets/covid19image.png","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","date","Date","toLocaleString","day","month","toLocaleTimeString","cards","label","value","body","cls","map","cardType","index","Grid","xs","md","item","component","Card","key","className","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","start","end","separator","varient","container","spacing","justify","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","dailyData","total","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","labels","datasets","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","event","target","App","state","countryChangedHandler","countryData","setState","globalData","this","src","covid19image","image","alt","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"uVA6CeA,EAvCD,SAAC,GAA4D,IAAD,IAAzDC,KAAQC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,WACnD,IAAKH,EACD,MAAO,aAGXI,QAAQC,MAER,IAAMC,EACF,IAAIC,KAAKJ,GAAYK,eAAe,UAAW,CAAEC,IAAK,UAAWC,MAAO,SACtE,IACA,IAAIH,KAAKJ,GAAYQ,qBAQvBC,EANe,CACf,CAAEC,MAAO,WAAYC,MAAOd,EAAUc,MAAOC,KAAM,qCAAsCC,IAAK,YAC9F,CAAEH,MAAO,YAAaC,MAAOb,EAAUa,MAAOC,KAAM,qCAAsCC,IAAK,aAC/F,CAAEH,MAAO,SAAUC,MAAOZ,EAAOY,MAAOC,KAAM,uCAAwCC,IAAK,WAGxEC,KAAI,SAACC,EAAUC,GAClC,OAAO,kBAACC,EAAA,EAAD,CAAMC,GAAI,GAAIC,GAAI,EAAGC,MAAI,EAACC,UAAWC,IAAMC,IAAKP,EAAOQ,UAAWC,IAAGC,IAAOC,KAAMD,IAAOX,EAASF,OACrG,kBAACe,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAAEhB,EAASL,OACzD,kBAACmB,EAAA,EAAD,CAAYG,QAAQ,MAAK,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKnB,EAASJ,MAAOwB,UAAU,OAC3E,kBAACN,EAAA,EAAD,CAAYC,MAAM,iBAAiB3B,GACnC,kBAAC0B,EAAA,EAAD,CAAYO,QAAQ,SAASrB,EAASH,WAMlD,OACI,yBAAKY,UAAWE,IAAOW,WACnB,kBAACpB,EAAA,EAAD,CAAMoB,WAAS,EAACC,QAAS,EAAGC,QAAQ,UAC/B9B,K,yBCrCX+B,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DAEjBC,EAAgBJ,EAChBE,IACCE,EAAa,UAAMJ,EAAN,sBAAuBE,IAJpB,kBASoDG,IAAMC,IAAIF,GAT9D,2BASThD,KAAQC,EATC,EASDA,UAAWC,EATV,EASUA,UAAWC,EATrB,EASqBA,OAAQC,EAT7B,EAS6BA,WAT7B,kBAWV,CAAEH,YAAWC,YAAWC,SAAQC,eAXtB,4FAAH,sDAkBT+C,EAAc,uCAAG,gCAAAJ,EAAA,+EAGCE,IAAMC,IAAN,UAAaN,EAAb,WAHD,uBAGd5C,EAHc,EAGdA,KAEFoD,EAAepD,EAAKkB,KAAI,SAACmC,GAAD,MAAgB,CAC1CpD,UAAWoD,EAAUpD,UAAUqD,MAC/BnD,OAAQkD,EAAUlD,OAAOmD,MACzB/C,KAAM8C,EAAUE,eARE,kBAWfH,GAXe,yFAAH,qDAkBdI,EAAc,uCAAG,gCAAAT,EAAA,+EAGgBE,IAAMC,IAAN,UAAaN,EAAb,eAHhB,uBAGNa,EAHM,EAGdzD,KAAQyD,UAEVL,EAAeK,EAAUvC,KAAI,qBAAEwC,QALf,kBAOfN,GAPe,yFAAH,qD,yBCmCZO,EAtED,SAAC,GAAyD,IAAD,IAAtD3D,KAAQC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAU2C,EAAc,EAAdA,QAAc,EAEjCc,mBAAS,IAFwB,mBAE5DP,EAF4D,KAEjDQ,EAFiD,KAInEC,qBAAU,YACQ,uCAAG,sBAAAf,EAAA,kEACbc,EADa,SACMV,IADN,6EAAH,qDAIdY,KAED,CAACF,IAGJxD,QAAQC,IAAI+C,GAEZ,IAAMW,EACFX,EAAU,GAEF,kBAAC,IAAD,CACIrD,KAAM,CACFiE,OAAQZ,EAAUnC,KAAI,qBAAGX,QACzB2D,SAAU,CACN,CACIlE,KAAMqD,EAAUnC,KAAI,qBAAGjB,aACvBa,MAAO,WACPqD,YAAa,UACbC,MAAM,GAEV,CACIpE,KAAMqD,EAAUnC,KAAI,qBAAGf,UACvBW,MAAO,SACPqD,YAAa,MACbE,gBAAiB,uBACjBD,MAAM,OAMtB,KAGNE,EACFrE,EAEQ,kBAAC,IAAD,CACID,KAAM,CACFiE,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CAAC,CACPpD,MAAO,SACPuD,gBAAiB,CAAC,uBAAwB,uBAAwB,wBAClErE,KAAM,CAACC,EAAUc,MAAOb,EAAUa,MAAOZ,EAAOY,UAGxDwD,QAAS,CACLC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAsB7B,OAI5D,KAEV,OACI,yBAAKlB,UAAWE,IAAOW,WAClBK,EAAUwB,EAAUN,I,mCCpClBY,EA7BO,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EAECjB,mBAAS,IAFV,mBAExCkB,EAFwC,KAEtBC,EAFsB,KAI/CjB,qBAAU,YACS,uCAAG,sBAAAf,EAAA,kEACdgC,EADc,SACYvB,IADZ,6EAAH,qDAIfX,KACD,CAACkC,IAGJ,IAAIR,EAAUO,EAAiB5D,KAAI,SAAC4B,EAAS1B,GACzC,OAAO,4BAAQO,IAAKP,EAAOL,MAAO+B,GAAUA,MAGhD,OACI,6BACI,kBAACkC,EAAA,EAAD,CAAapD,UAAWE,IAAOmD,aAC3B,kBAACC,EAAA,EAAD,CAAcC,aAAa,SAASC,SAAU,SAACC,GAAD,OAAWR,EAAoBQ,EAAMC,OAAOvE,SAC1F,4BAAQA,MAAM,IAAd,UACKwD,MCeNgB,E,4MAjCbC,MAAQ,CACNxF,KAAM,GACN8C,QAAS,I,EAQX2C,sB,uCAAwB,WAAM3C,GAAN,eAAAC,EAAA,6DACtB1C,QAAQC,IAAIwC,GADU,SAGID,EAAUC,GAHd,OAGhB4C,EAHgB,OAItB,EAAKC,SAAS,CAAE3F,KAAM0F,EAAa5C,QAASA,IAJtB,2C,wPAJGD,I,OAAnB+C,E,OACNC,KAAKF,SAAS,CAAE3F,KAAM4F,I,qIAWtB,OACE,yBAAKhE,UAAWE,IAAOW,WAErB,yBAAKqD,IAAKC,IAAcnE,UAAWE,IAAOkE,MAAOC,IAAI,aAErD,kBAAC,EAAD,CAAOjG,KAAM6F,KAAKL,MAAMxF,OACxB,kBAAC,EAAD,CAAe6E,oBAAqBgB,KAAKJ,wBAEzC,kBAAC,EAAD,CAAOzF,KAAM6F,KAAKL,MAAMxF,KAAM8C,QAAS+C,KAAKL,MAAM1C,e,GA5BxCoD,aCHlBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U,mBCL1BC,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,mBCAnKD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCD7DD,EAAOC,QAAU,IAA0B,0C,mBCC3CD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC","file":"static/js/main.af8a6345.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport cx from 'classnames'\r\nimport CountUp from 'react-countup'\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n        return 'loading...';\r\n    }\r\n\r\n    console.log();\r\n\r\n    const date =\r\n        new Date(lastUpdate).toLocaleString('default', { day: 'numeric', month: 'long' })\r\n        + \" \"\r\n        + new Date(lastUpdate).toLocaleTimeString();\r\n\r\n    const cardsArray = [\r\n        { label: 'Infected', value: confirmed.value, body: \"Number of Active cases of covid-19\", cls: 'infected' },\r\n        { label: 'Recovered', value: recovered.value, body: \"Number of Recoveries from covid-19\", cls: 'recovered' },\r\n        { label: 'Deaths', value: deaths.value, body: \"Number of Deaths caused by covid-190\", cls: 'deaths' }\r\n    ];\r\n\r\n    let cards = cardsArray.map((cardType, index) => {\r\n        return <Grid xs={12} md={3} item component={Card} key={index} className={cx(styles.card, styles[cardType.cls])} >\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>{cardType.label}</Typography>\r\n                <Typography variant=\"h5\"><CountUp start={0} end={cardType.value} separator=','></CountUp></Typography>\r\n                <Typography color=\"textSecondary\">{date}</Typography>\r\n                <Typography varient=\"body2\">{cardType.body}</Typography>\r\n            </CardContent>\r\n        </Grid>\r\n\r\n    });\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                {cards}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n    let changeableUrl = url;\r\n    if (country ) {\r\n         changeableUrl = `${url}/countries/${country}`\r\n    }\r\n\r\n    try {\r\n\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }));\r\n\r\n        return modifiedData;\r\n\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n        const modifiedData = countries.map(({name}) => name);\r\n\r\n        return modifiedData;\r\n\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchApi();\r\n\r\n    }, [setDailyData]);\r\n\r\n\r\n    console.log(dailyData);\r\n\r\n    const lineChart = (\r\n        dailyData[0]\r\n            ? (\r\n                <Line\r\n                    data={{\r\n                        labels: dailyData.map(({ date }) => date),\r\n                        datasets: [\r\n                            {\r\n                                data: dailyData.map(({ confirmed }) => confirmed),\r\n                                label: \"Infected\",\r\n                                borderColor: \"#3333ff\",\r\n                                fill: true\r\n                            },\r\n                            {\r\n                                data: dailyData.map(({ deaths }) => deaths),\r\n                                label: \"Deaths\",\r\n                                borderColor: \"red\",\r\n                                backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                                fill: true\r\n                            }\r\n                        ]\r\n                    }\r\n                    }\r\n                />\r\n            ) : null\r\n    );\r\n\r\n    const barChart =\r\n        confirmed ?\r\n            (\r\n                <Bar\r\n                    data={{\r\n                        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n                        datasets: [{\r\n                            label: 'People',\r\n                            backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                            data: [confirmed.value, recovered.value, deaths.value]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        legend: { display: false },\r\n                        title: { display: true, text: `Current state in ${country}` }\r\n                    }}\r\n                />\r\n            )\r\n            : null\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart :lineChart}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api'\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setFetchedCountries(await fetchCountries())\r\n        }\r\n\r\n        fetchData();\r\n    }, [setFetchedCountries]);\r\n\r\n\r\n    let options = fetchedCountries.map((country, index) => {\r\n        return <option key={index} value={country}>{country}</option>\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={styles.formControl}>\r\n                <NativeSelect defaultValue='global' onChange={(event) => handleCountryChange(event.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                    {options}\r\n                </NativeSelect>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CountryPicker;","import React, { Component } from 'react';\nimport styles from './App.module.css';\n\nimport covid19image from '../src/assets/covid19image.png'\nimport { Cards, CountryPicker, Chart } from './components'\nimport { fetchData } from './api'\n\nclass App extends Component {\n\n  state = {\n    data: {},\n    country: ''\n  }\n\n  async componentDidMount() {\n    const globalData = await fetchData()\n    this.setState({ data: globalData });\n  }\n\n  countryChangedHandler = async(country) => {\n    console.log(country);\n\n    const countryData = await fetchData(country);\n    this.setState({ data: countryData, country: country });\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n\n        <img src={covid19image} className={styles.image} alt=\"COVID-19\" />\n\n        <Cards data={this.state.data} />\n        <CountryPicker handleCountryChange={this.countryChangedHandler} />\n\n        <Chart data={this.state.data} country={this.state.country} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__g64aw\",\"card\":\"Cards_card__1t43A\",\"infected\":\"Cards_infected__2cuT0\",\"recovered\":\"Cards_recovered__3TmRv\",\"deaths\":\"Cards_deaths__3eFgN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2m7Wp\",\"image\":\"App_image__20vac\"};","module.exports = __webpack_public_path__ + \"static/media/covid19image.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__186EA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2RTbd\"};"],"sourceRoot":""}